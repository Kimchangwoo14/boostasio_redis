// automatically generated by the FlatBuffers compiler, do not modify

namespace ProtocolCS
{

using System;
using FlatBuffers;

public struct test : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static test GetRootAstest(ByteBuffer _bb) { return GetRootAstest(_bb, new test()); }
  public static test GetRootAstest(ByteBuffer _bb, test obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public test __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long AccoutnUID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<test> Createtest(FlatBufferBuilder builder,
      long accoutnUID = 0) {
    builder.StartObject(1);
    test.AddAccoutnUID(builder, accoutnUID);
    return test.Endtest(builder);
  }

  public static void Starttest(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddAccoutnUID(FlatBufferBuilder builder, long accoutnUID) { builder.AddLong(0, accoutnUID, 0); }
  public static Offset<test> Endtest(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<test>(o);
  }
};


}
