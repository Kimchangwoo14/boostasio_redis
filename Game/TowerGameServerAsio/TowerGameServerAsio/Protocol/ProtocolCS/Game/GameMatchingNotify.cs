// automatically generated by the FlatBuffers compiler, do not modify

namespace ProtocolCS.Game
{

using System;
using FlatBuffers;

public struct GameMatchingNotify : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GameMatchingNotify GetRootAsGameMatchingNotify(ByteBuffer _bb) { return GetRootAsGameMatchingNotify(_bb, new GameMatchingNotify()); }
  public static GameMatchingNotify GetRootAsGameMatchingNotify(ByteBuffer _bb, GameMatchingNotify obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GameMatchingNotify __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Result { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RoomUID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long CurrentServerTime { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ReadyTime { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<GameMatchingNotify> CreateGameMatchingNotify(FlatBufferBuilder builder,
      int result = 0,
      int roomUID = 0,
      long currentServerTime = 0,
      long readyTime = 0) {
    builder.StartObject(4);
    GameMatchingNotify.AddReadyTime(builder, readyTime);
    GameMatchingNotify.AddCurrentServerTime(builder, currentServerTime);
    GameMatchingNotify.AddRoomUID(builder, roomUID);
    GameMatchingNotify.AddResult(builder, result);
    return GameMatchingNotify.EndGameMatchingNotify(builder);
  }

  public static void StartGameMatchingNotify(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddResult(FlatBufferBuilder builder, int result) { builder.AddInt(0, result, 0); }
  public static void AddRoomUID(FlatBufferBuilder builder, int roomUID) { builder.AddInt(1, roomUID, 0); }
  public static void AddCurrentServerTime(FlatBufferBuilder builder, long currentServerTime) { builder.AddLong(2, currentServerTime, 0); }
  public static void AddReadyTime(FlatBufferBuilder builder, long readyTime) { builder.AddLong(3, readyTime, 0); }
  public static Offset<GameMatchingNotify> EndGameMatchingNotify(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GameMatchingNotify>(o);
  }
};


}
