// automatically generated by the FlatBuffers compiler, do not modify

namespace ProtocolCS.Game
{

using System;
using FlatBuffers;

public struct GameStartNotify : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GameStartNotify GetRootAsGameStartNotify(ByteBuffer _bb) { return GetRootAsGameStartNotify(_bb, new GameStartNotify()); }
  public static GameStartNotify GetRootAsGameStartNotify(ByteBuffer _bb, GameStartNotify obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GameStartNotify __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long CurrentServerTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<GameStartNotify> CreateGameStartNotify(FlatBufferBuilder builder,
      long currentServerTime = 0) {
    builder.StartObject(1);
    GameStartNotify.AddCurrentServerTime(builder, currentServerTime);
    return GameStartNotify.EndGameStartNotify(builder);
  }

  public static void StartGameStartNotify(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddCurrentServerTime(FlatBufferBuilder builder, long currentServerTime) { builder.AddLong(0, currentServerTime, 0); }
  public static Offset<GameStartNotify> EndGameStartNotify(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GameStartNotify>(o);
  }
};


}
