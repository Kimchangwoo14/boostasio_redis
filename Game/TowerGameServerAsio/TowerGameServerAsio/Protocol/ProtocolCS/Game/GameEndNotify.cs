// automatically generated by the FlatBuffers compiler, do not modify

namespace ProtocolCS.Game
{

using System;
using FlatBuffers;

public struct GameEndNotify : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GameEndNotify GetRootAsGameEndNotify(ByteBuffer _bb) { return GetRootAsGameEndNotify(_bb, new GameEndNotify()); }
  public static GameEndNotify GetRootAsGameEndNotify(ByteBuffer _bb, GameEndNotify obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GameEndNotify __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Result { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long WinnerAccountUID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public ProtocolCS.playerInfo? PlayerInfos(int j) { int o = __p.__offset(8); return o != 0 ? (ProtocolCS.playerInfo?)(new ProtocolCS.playerInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PlayerInfosLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GameEndNotify> CreateGameEndNotify(FlatBufferBuilder builder,
      int result = 0,
      long winnerAccountUID = 0,
      VectorOffset playerInfosOffset = default(VectorOffset)) {
    builder.StartObject(3);
    GameEndNotify.AddWinnerAccountUID(builder, winnerAccountUID);
    GameEndNotify.AddPlayerInfos(builder, playerInfosOffset);
    GameEndNotify.AddResult(builder, result);
    return GameEndNotify.EndGameEndNotify(builder);
  }

  public static void StartGameEndNotify(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddResult(FlatBufferBuilder builder, int result) { builder.AddInt(0, result, 0); }
  public static void AddWinnerAccountUID(FlatBufferBuilder builder, long winnerAccountUID) { builder.AddLong(1, winnerAccountUID, 0); }
  public static void AddPlayerInfos(FlatBufferBuilder builder, VectorOffset playerInfosOffset) { builder.AddOffset(2, playerInfosOffset.Value, 0); }
  public static VectorOffset CreatePlayerInfosVector(FlatBufferBuilder builder, Offset<ProtocolCS.playerInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartPlayerInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GameEndNotify> EndGameEndNotify(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GameEndNotify>(o);
  }
};


}
