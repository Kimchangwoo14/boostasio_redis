// automatically generated by the FlatBuffers compiler, do not modify

namespace ProtocolCS.Game
{

using System;
using FlatBuffers;

public struct GameServerReq : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GameServerReq GetRootAsGameServerReq(ByteBuffer _bb) { return GetRootAsGameServerReq(_bb, new GameServerReq()); }
  public static GameServerReq GetRootAsGameServerReq(ByteBuffer _bb, GameServerReq obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GameServerReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PacketType { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetPacketTypeBytes() { return __p.__vector_as_arraysegment(4); }
  public string PacketUserID { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetPacketUserIDBytes() { return __p.__vector_as_arraysegment(6); }
  public string Version { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetVersionBytes() { return __p.__vector_as_arraysegment(8); }
  public string ClientVersion { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetClientVersionBytes() { return __p.__vector_as_arraysegment(10); }
  public string Data { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetDataBytes() { return __p.__vector_as_arraysegment(12); }
  public string AuthKey { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetAuthKeyBytes() { return __p.__vector_as_arraysegment(14); }
  public string PacketData { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetPacketDataBytes() { return __p.__vector_as_arraysegment(16); }

  public static Offset<GameServerReq> CreateGameServerReq(FlatBufferBuilder builder,
      StringOffset packetTypeOffset = default(StringOffset),
      StringOffset packetUserIDOffset = default(StringOffset),
      StringOffset versionOffset = default(StringOffset),
      StringOffset clientVersionOffset = default(StringOffset),
      StringOffset DataOffset = default(StringOffset),
      StringOffset authKeyOffset = default(StringOffset),
      StringOffset packetDataOffset = default(StringOffset)) {
    builder.StartObject(7);
    GameServerReq.AddPacketData(builder, packetDataOffset);
    GameServerReq.AddAuthKey(builder, authKeyOffset);
    GameServerReq.AddData(builder, DataOffset);
    GameServerReq.AddClientVersion(builder, clientVersionOffset);
    GameServerReq.AddVersion(builder, versionOffset);
    GameServerReq.AddPacketUserID(builder, packetUserIDOffset);
    GameServerReq.AddPacketType(builder, packetTypeOffset);
    return GameServerReq.EndGameServerReq(builder);
  }

  public static void StartGameServerReq(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddPacketType(FlatBufferBuilder builder, StringOffset packetTypeOffset) { builder.AddOffset(0, packetTypeOffset.Value, 0); }
  public static void AddPacketUserID(FlatBufferBuilder builder, StringOffset packetUserIDOffset) { builder.AddOffset(1, packetUserIDOffset.Value, 0); }
  public static void AddVersion(FlatBufferBuilder builder, StringOffset versionOffset) { builder.AddOffset(2, versionOffset.Value, 0); }
  public static void AddClientVersion(FlatBufferBuilder builder, StringOffset clientVersionOffset) { builder.AddOffset(3, clientVersionOffset.Value, 0); }
  public static void AddData(FlatBufferBuilder builder, StringOffset DataOffset) { builder.AddOffset(4, DataOffset.Value, 0); }
  public static void AddAuthKey(FlatBufferBuilder builder, StringOffset authKeyOffset) { builder.AddOffset(5, authKeyOffset.Value, 0); }
  public static void AddPacketData(FlatBufferBuilder builder, StringOffset packetDataOffset) { builder.AddOffset(6, packetDataOffset.Value, 0); }
  public static Offset<GameServerReq> EndGameServerReq(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GameServerReq>(o);
  }
};


}
