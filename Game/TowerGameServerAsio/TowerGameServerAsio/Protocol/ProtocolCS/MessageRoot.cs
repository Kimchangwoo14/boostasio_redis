// automatically generated by the FlatBuffers compiler, do not modify

namespace ProtocolCS
{

using System;
using FlatBuffers;

public struct MessageRoot : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MessageRoot GetRootAsMessageRoot(ByteBuffer _bb) { return GetRootAsMessageRoot(_bb, new MessageRoot()); }
  public static MessageRoot GetRootAsMessageRoot(ByteBuffer _bb, MessageRoot obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MessageRoot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public MessageType MessageType { get { int o = __p.__offset(4); return o != 0 ? (MessageType)__p.bb.Get(o + __p.bb_pos) : MessageType.NONE; } }
  public TTable? Message<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o) : null; }

  public static Offset<MessageRoot> CreateMessageRoot(FlatBufferBuilder builder,
      MessageType message_type = MessageType.NONE,
      int messageOffset = 0) {
    builder.StartObject(2);
    MessageRoot.AddMessage(builder, messageOffset);
    MessageRoot.AddMessageType(builder, message_type);
    return MessageRoot.EndMessageRoot(builder);
  }

  public static void StartMessageRoot(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMessageType(FlatBufferBuilder builder, MessageType messageType) { builder.AddByte(0, (byte)messageType, 0); }
  public static void AddMessage(FlatBufferBuilder builder, int messageOffset) { builder.AddOffset(1, messageOffset, 0); }
  public static Offset<MessageRoot> EndMessageRoot(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MessageRoot>(o);
  }
  public static void FinishMessageRootBuffer(FlatBufferBuilder builder, Offset<MessageRoot> offset) { builder.Finish(offset.Value); }
};


}
